<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <version>2.11</version>
    <relativePath/>
  </parent>
  
  <artifactId>teresa-build</artifactId>
  <version>0.1.7-SNAPSHOT</version>
  <name>Teresa Jenkins Build</name>
  <description>Teresa Build is an useful jenkins plugin that helps the developer to deploy applications easily</description>
  <url>https://wiki.jenkins-ci.org/display/JENKINS/teresa-jenkins-build+Plugin</url>
  <packaging>hpi</packaging>
   
  <developers>
    <developer>
      <id>ehattori</id>
      <name>Eduardo Hattori</name>
      <email>eduardo.fcamara@luizalabs.com</email>
    </developer>
    <developer>
      <id>eduardocortes</id>
      <name>Eduardo Cortes</name>
      <email>eduardocortes.fcamara@luizalabs.com</email>
    </developer>
    <developer>
      <id>mahelder</id>
      <name>Mahelder Melo</name>
      <email>mahelder.fcamara@luizalabs.com</email>
    </developer>
    <developer>
      <id>clebercf</id>
      <name>Cleber Fonseca</name>
      <email>cleber.avance@luizalabs.com</email>
    </developer>
  </developers>  

  <properties>
    <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
    <jenkins.version>1.625.3</jenkins.version>
    <!-- Java Level to use. Java 7 required when using core >= 1.612 -->
    <java.level>7</java.level>
    <!-- Jenkins Test Harness version you use to test the plugin. -->
    <!-- For Jenkins version >= 1.580.1 use JTH 2.x or higher. -->
    <jenkins-test-harness.version>2.13</jenkins-test-harness.version>
    <!-- Other properties you may want to use:
         ~ hpi-plugin.version: The HPI Maven Plugin version used by the plugin..
         ~ stapler-plugin.version: The Stapler Maven plugin version required by the plugin.
    -->
  </properties>

  

  <!-- The default licence for Jenkins OSS Plugins is MIT. Substitute for the applicable one if needed. -->

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://opensource.org/licenses/MIT</url>
    </license>
  </licenses>

 
  <!-- Assuming you want to host on @jenkinsci:
  <scm>
    <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
    <url>http://github.com/jenkinsci/${project.artifactId}-plugin</url>
  </scm>
   -->
  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>
  <!-- If you want to depend on other plugins:
  <dependencies>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials</artifactId>
      <version>1.9.4</version>
    </dependency>
  </dependencies>
  -->

  <build>
  	<pluginManagement>
  		<plugins>
  			<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
  			<plugin>
  				<groupId>org.eclipse.m2e</groupId>
  				<artifactId>lifecycle-mapping</artifactId>
  				<version>1.0.0</version>
  				<configuration>
  					<lifecycleMappingMetadata>
  						<pluginExecutions>
  							<pluginExecution>
  								<pluginExecutionFilter>
  									<groupId>
  										org.apache.maven.plugins
  									</groupId>
  									<artifactId>
  										maven-javadoc-plugin
  									</artifactId>
  									<versionRange>
  										[2.10.1,)
  									</versionRange>
  									<goals>
  										<goal>javadoc</goal>
  									</goals>
  								</pluginExecutionFilter>
  								<action>
  									<ignore></ignore>
  								</action>
  							</pluginExecution>
  						</pluginExecutions>
  					</lifecycleMappingMetadata>
  				</configuration>
  			</plugin>
  		</plugins>
  	</pluginManagement>
  </build>
</project>
